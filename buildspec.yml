# Purpose of this buildspec file: whenever new code is pushed to main, CodePipeline #1 will trigger a build job.
# This build job will execute and build a Docker image of the updated code, then it will push
# that image to AWS ECR (this is like Dockerhub for AWS)
version: 0.2
phases:
 install: # login to AWS ECR so that we can push the image generated by this CodeBuild Project
  commands:
   # This is the specific url for the repository where the image is pushd in AWS
   - REPOSITORY_URI=855430746673.dkr.ecr.us-east-1.amazonaws.com/curricula-tracker-ecr
   - echo Logging in to AWS ECR…
   # We must login to the ECR in order to push the image to the private AWS ECR
   - aws --version
   - aws --region us-east-1 ecr get-login-password | docker login --username AWS --password-stdin 855430746673.dkr.ecr.us-east-1.amazonaws.com

   
 build: # generate jar with mvn, build Docker image
  commands:
   # Generate the JAR with the new source code
   - mvn clean package
   # Build the Docker image and tag it with the ECR name so we can push it there
   - echo Building docker image…
   - docker build . -t $REPOSITORY_URI:latest

 post_build: # Push the Docker image to the ECR
  commands:
   - echo Pushing ECR…
   - docker push $REPOSITORY_URI:latest
   
  # Once this buildjob is finished and this image is pushed to ECR 
  # that will trigger CodePipline #2 which will rollout the new image to
  # replace the old on in the Kubernetes deployment
